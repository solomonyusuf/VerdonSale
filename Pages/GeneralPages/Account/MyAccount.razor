@page "/account"
@using Microsoft.AspNetCore.Http
@using VerdonSale.Service
@inject UserService _user
@inject ApplicationDbContext _db
@inject UserManager<AppUser> _userManager
@inject SignInManager<AppUser> _signManager
@inject IHttpContextAccessor _http
@inject NavigationManager _router


<main class="main">
	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
		<div class="container">
			<h1 class="page-title">My Account<span>Shop</span></h1>
		</div><!-- End .container -->
	</div><!-- End .page-header -->
	<nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
		<div class="container">
			<ol class="breadcrumb">
				<li class="breadcrumb-item"><a href="/products">Home</a></li>
				<li class="breadcrumb-item"><a>Shop</a></li>
				<li class="breadcrumb-item active" aria-current="page">My Account</li>
			</ol>
		</div><!-- End .container -->
	</nav><!-- End .breadcrumb-nav -->

	<div class="page-content">
		<div class="dashboard">
			<div class="container">
				<div class="row">
					<aside class="col-md-4 col-lg-3">
						<ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
							<li class="nav-item">
								<a class="nav-link active" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false">Account Details</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" id="tab-orders-link" data-toggle="tab" href="#tab-orders" role="tab" aria-controls="tab-orders" aria-selected="false">Orders</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Adresses</a>
							</li>		
							<li class="nav-item">
								<form method="post" action="/logout">
									<button type="submit" class="nav-link btn btn-danger">Sign Out</button>
								</form>
							</li>
						</ul>
					</aside><!-- End .col-lg-3 -->

					<div class="col-md-8 col-lg-9">
						<div class="tab-content">
							
							<div class="tab-pane fade" id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
								<p>No order has been made yet.</p>
								<a href="/products" class="btn btn-outline-primary-2"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a>
							</div><!-- .End .tab-pane -->

							<div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">
								<p>The following addresses will be used on the checkout page by default.</p>

								<div class="row">
									<div class="col-lg-12 col-sm-12 col-md-12">
										<div class="card card-dashboard">
											<div class="card-body">
												<h3 class="card-title">Shipping Address</h3><!-- End .card-title -->

												@if(user.Address != null)
												{
													<p>
														@user.FirstName @user.LastName<br>
														@user.Address<br>
														@user.City<br>
														@user.Country<br>
														@user.PhoneNumber<br>
														@user.Email<br>
														<a href="/editaddress">Edit <i class="icon-edit"></i></a>
													</p>
												}
												@if(user.Address == null)
												{
													<p style="color:red;">No Address Configured yet. <a href="/editaddress"><i class="icon-edit"></i>Add Address </a></p>

												}
											</div><!-- End .card-body -->
										</div><!-- End .card-dashboard -->
									</div><!-- End .col-lg-6 -->

									
								</div><!-- End .row -->
							</div><!-- .End .tab-pane -->

							<div class="tab-pane fade show active" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
								<EditForm Model="user" OnSubmit="UpdateUser">
									<div class="row">
										<div class="col-sm-6">
											<label>First Name *</label>
											<InputText @bind-Value="@user.FirstName" type="text" class="form-control" required/>
										</div><!-- End .col-sm-6 -->
										<div class="col-sm-6">
											<label>Middle Name *</label>
											<InputText @bind-Value="@user.MiddleName" type="text" class="form-control" required/>
										</div><!-- End .col-sm-6 -->

										<div class="col-sm-6">
											<label>Last Name *</label>
											<InputText @bind-Value="@user.LastName" type="text" class="form-control" required/>
										</div><!-- End .col-sm-6 -->
									</div><!-- End .row -->

									<label>Display Name *</label>
									<strong>@user.FirstName @user.MiddleName @user.LastName</strong>
									<small class="form-text">This will be how your name will be displayed in the account section and in reviews</small>

									<label>Email address *</label>
									<InputText @bind-Value="@user.Email" type="email" class="form-control" required/>

									<label>Current password (leave blank to leave unchanged)</label>
									<InputText @bind-Value="@CurrentPwd" type="password" class="form-control"/>

									<label>New password (leave blank to leave unchanged)</label>
									<InputText @bind-Value="@NewPwd" type="password" class="form-control"/>

									<button type="submit" class="btn btn-outline-primary-2">
										<span>SAVE CHANGES</span>
										<i class="icon-long-arrow-right"></i>
									</button>
									<a href="/delete" class="btn btn-outline-primary-2">
										<span>DELETE ACCT</span>
										<i class="icon-long-arrow-right"></i>
									</a>
								</EditForm>
							</div><!-- .End .tab-pane -->
						</div>
					</div><!-- End .col-lg-9 -->
				</div><!-- End .row -->
			</div><!-- End .container -->
		</div><!-- End .dashboard -->
	</div><!-- End .page-content -->
</main><!-- End .main -->


@code{
	#nullable disable

	public AppUser user = new();
	public string CurrentPwd;
	public string NewPwd;

	protected  override async Task OnInitializedAsync()
	{
		user = await _user.GetUser();
		await base.OnInitializedAsync();
	}


	public async Task UpdateUser()
	{
		try
		{
		UpdateUser:
			if(CurrentPwd == null || NewPwd == null)
			{
				_db.User.Update(user);
				await _db.SaveChangesAsync();
			}
			else
			{
				await ChangePassword();
				goto UpdateUser;
			}

		}catch(Exception e)
		{
			Console.WriteLine(e);
		}
	}

	public async Task ChangePassword()
	{
		try
		{
			await _userManager.ChangePasswordAsync(user, CurrentPwd, NewPwd);

		}
		catch (Exception e)
		{
			Console.WriteLine(e);
		}
	}

	}