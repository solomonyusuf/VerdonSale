@page "/products"
@inject SalesDbContext _db
@inject IHttpContextAccessor _http
@inject MainService main
@inject UserService _user
<div class="page-content">
    <div class="container">
        <div class="row">
            <div class="col-lg-9">
                <div class="toolbox">
                    <div class="toolbox-left">
                        <div class="toolbox-info">
                            Showing <span>@products.Value.Count</span> Products
                        </div><!-- End .toolbox-info -->
                    </div><!-- End .toolbox-left -->

                    <div class="toolbox-right">
                     
                        <div class="toolbox-sort">
                            <label for="sortby">Sort by:</label>
                            <div class="select-custom">
                                <select value="@SortString" name="sortby" id="sortby" class="form-control" >
                                    <option value="popularity" selected="selected">Most Recent</option>
                                    <option value="rating">Most Oldest</option>
                                </select>
                            </div>
                        </div><!-- End .toolbox-sort -->
                        <div class="toolbox-layout">
                          

                            <a href="category.html" class="btn-layout active">
                                <svg width="16" height="10">
                                    <rect x="0" y="0" width="4" height="4" />
                                    <rect x="6" y="0" width="4" height="4" />
                                    <rect x="12" y="0" width="4" height="4" />
                                    <rect x="0" y="6" width="4" height="4" />
                                    <rect x="6" y="6" width="4" height="4" />
                                    <rect x="12" y="6" width="4" height="4" />
                                </svg>
                            </a>

                            
                        </div><!-- End .toolbox-layout -->
                    </div><!-- End .toolbox-right -->
                </div><!-- End .toolbox -->
                <div class="header-search header-search-extended header-search-visible">
                    <a href="#" class="search-toggle" role="button"><i class="icon-search"></i></a>
                    <form action="#" method="get">
                        <div class="header-search-wrapper search-wrapper-wide">
                            <label for="q" class="sr-only">Search</label>
                            <input step="any" @bind-value="Input" @oninput="Search" type="search" class="form-control" name="q" id="q" placeholder="Search product name, price, tag..." required>
                            <button class="btn btn-primary" type="submit"><i class="icon-search"></i></button>
                        </div><!-- End .header-search-wrapper -->
                    </form>
                </div>
                <div class="products mb-3">
                    <div class="row justify-content-center">
                         @if(products.Value.Count() == 0)
                        {
                            <div>
                                <h5 style="color:red;">No product to display</h5>
                                </div>
                        }
                         @foreach (var item in products.Value)
                                {
                                        <div class="col-6 col-md-4 col-lg-4">
                                            <div class="product product-7 text-center">
                                                <div class="product-media">
                                                    <span class="product-label label-out">@item.Status</span>
                                                    <a href="/details/@item.ProductId">
                                                        <img src="@item.Images.First().ImagePath" alt="Product image" class="product-image">
                                                    </a>

                                                    <div class="product-action-vertical">
                                                        <a href="#" class="btn-product-icon btn-wishlist btn-expandable"><span>add to wishlist</span></a>
                                                        <a href="popup/quickView.html" class="btn-product-icon btn-quickview" title="Quick view"><span>Quick view</span></a>
                                                        <a href="#" class="btn-product-icon btn-compare" title="Compare"><span>Compare</span></a>
                                                    </div><!-- End .product-action-vertical -->
                                                    <AuthorizeView>
                                                    <Authorized>
                                                        @if (main.CheckProduct(@item, UserID).Result == item.ProductId)
                                                        {
                                                            <div class="product-action">
                                                                <button class="btn w-100 btn-info">Already in cart</button>
                                                            </div>

                                                            <!-- End .product-action -->
                                                        }
                                                        else
                                                        {
                                                            <div class="product-action">
                                                                <button class="btn-product btn-cart" @onclick="@(async ()=> {await main.AddToCart(@item,UserID); await GetAll();})"><span>add to cart</span></button>
                                                            </div>

                                                            <!-- End .product-action -->
                                                        }
                                                    </Authorized>
                                                </AuthorizeView>
                                                   
                                                </div><!-- End .product-media -->

                                                <div class="product-body">
                                                    <div class="product-cat">
                                                        <a href="#">@item.Tag</a>
                                                    </div><!-- End .product-cat -->
                                                    <h3 class="product-title"><a href="/product/detail/@item.ProductId">@item.ProductName</a></h3><!-- End .product-title -->
                                                    <div class="product-price">
                                                        <span class="out-price">$@item.Price</span>
                                                    </div><!-- End .product-price -->
                                                    <div class="ratings-container">
                                                        <div class="ratings">
                                                            <div class="ratings-val" style="width: 80%;"></div><!-- End .ratings-val -->
                                                        </div><!-- End .ratings -->
                                                        <span class="ratings-text">( 6 Reviews )</span>
                                                    </div><!-- End .rating-container -->
                                                </div><!-- End .product-body -->
                                            </div><!-- End .product -->
                                            </div>
                                }
 
                    </div><!-- End .row -->
                </div><!-- End .products -->
            </div><!-- End .col-lg-9 -->
            <aside class="col-lg-3 order-lg-first">
                <div class="sidebar sidebar-shop">
                    <div class="widget widget-clean">
                        <label>Filters:&nbsp;&nbsp;  </label>
                        <strong> Products</strong>
                    </div><!-- End .widget widget-clean -->

                    <div class="widget">
                        <h3 class="widget-title">
                      
                                Category
                         
                        </h3><!-- End .widget-title -->

                        <div>
                            <div class="widget-body">
                                <div class="filter-items filter-items-count">
                                    <div class="filter-item">
                                        <div>
                                            <input type="checkbox" name="check" onclick="onlyOne(this)" @oninput="@(()=> GetAll())" class="form-control-sm">
                                            <label>All Products</label>
                                        </div><!-- End .custom-checkbox -->
                                        <span class="item-count">@GetAll().Result.Count()</span>
                                    </div><!-- End .filter-item -->

                                    @foreach (var item in category)
                                    {
                                        <div class="filter-item">
                                            <div>
                                                <input type="checkbox" name="check" onclick="onlyOne(this)" @oninput="@(()=>  Navigator(@item.CategoryId))" class="form-control-sm">
                                                <label>@item.CategoryName</label>
                                            </div><!-- End .custom-checkbox -->
                                            <span class="item-count">@item.Products.Count()</span>
                                        </div>

                                        <!-- End .filter-item -->
                                    }
                                    @if(category.Count() == 0)
                                    {
                                        <div>
                                            <h5 style="color:red;">No category to display</h5>
                                            </div>
                                    }
                             
                                </div><!-- End .filter-items -->
                            </div><!-- End .widget-body -->
                        </div><!-- End .collapse -->
                    </div><!-- End .widget -->

                    
                </div><!-- End .sidebar sidebar-shop -->
            </aside><!-- End .col-lg-3 -->
        </div><!-- End .row -->
    </div><!-- End .container -->
</div><!-- End .page-content -->


@code
{
    #nullable disable
    public BehaviorSubject<List<Product>> products = new BehaviorSubject<List<Product>>(new List<Product>());
    public List<Category> category = new();
    public string SortString;
    public string Input;
    public string UserID;
    protected override async Task OnInitializedAsync()
    {
        await GetAll();
        await base.OnInitializedAsync();
    }




    private async Task<List<Product>> GetAll()
    {
        try
        {
            var e = await _user.GetUser();
            UserID = e.Id;
            category = await _db.Categories.Include(x=> x.Products).ToListAsync();
            var data = await _db.Products.Include(x=> x.Images).OrderByDescending(x=> x.ProductId).ToListAsync();
            products.OnNext(data);

        }
        catch(Exception e)
        {
            Console.WriteLine(e);
        }

        return products.Value;
    }
    public async void Search(ChangeEventArgs args)
    {
        try
        {

            var value = args.Value.ToString();
            if (value == null)
            {
                await GetAll();
            }
            var filter = GetAll().Result.Where(x => 
                x.ProductName.ToLowerInvariant().Contains(value.ToLowerInvariant())||
                x.Price.ToString().ToLowerInvariant().Contains(value.ToLowerInvariant())||
                x.Tag.ToLowerInvariant().Contains(value.ToLowerInvariant())
            ).ToList();
            products.OnNext(filter);

        }catch(Exception e)
        {
            Console.WriteLine(e);
        }
    }
    public void Navigator(Guid param)
    {
        var data = GetAll().Result.Where(x => x.CategoryId == param).ToList();
        products.OnNext(data);
    }

    
   

   
}